Index: src/tests/com/chess/tests/TestPieces.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tests.com.chess.tests;\n\nimport com.chess.engine.Alliance;\nimport com.chess.engine.board.Board;\nimport com.chess.engine.board.BoardUtils;\nimport com.chess.engine.board.Move;\nimport com.chess.engine.pieces.*;\nimport com.chess.engine.player.MoveTransition;\nimport org.junit.Assert;\nimport org.junit.Test;\n\nimport java.util.Collection;\n\nimport static junit.framework.Assert.assertEquals;\nimport static junit.framework.Assert.assertTrue;\nimport static junit.framework.TestCase.assertFalse;\nimport static org.junit.Assert.assertNotNull;\n\npublic class TestPieces {\n\n    @Test\n    public void testMiddleQueenOnEmptyBoard() {\n        final Board.Builder builder = new Board.Builder();\n        // Black Layout\n        builder.setPiece(new King(4, Alliance.BLACK));\n        // White Layout\n        builder.setPiece(new Queen(36, Alliance.WHITE));\n        builder.setPiece(new King(60, Alliance.WHITE));\n        // Set the current player\n        builder.setMoveMaker(Alliance.WHITE);\n        final Board board = builder.build();\n        final Collection<Move> whiteLegals = board.whitePlayer().getLegalMoves();\n        final Collection<Move> blackLegals = board.blackPlayer().getLegalMoves();\n        assertEquals(whiteLegals.size(), 31);\n        assertEquals(blackLegals.size(), 5);\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e8\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e7\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e6\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e5\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e3\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e2\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"a4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"b4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"c4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"d4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"f4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"g4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"h4\"))));\n    }\n\n    @Test\n    public void testLegalMoveAllAvailable() {\n\n        final Board.Builder boardBuilder = new Board.Builder();\n        // Black Layout\n        boardBuilder.setPiece(new King(4, Alliance.BLACK));\n        boardBuilder.setPiece(new Knight(28, Alliance.BLACK));\n        // White Layout\n        boardBuilder.setPiece(new Knight(36, Alliance.WHITE));\n        boardBuilder.setPiece(new King(60, Alliance.WHITE));\n        // Set the current player\n        boardBuilder.setMoveMaker(Alliance.WHITE);\n        final Board board = boardBuilder.build();\n        final Collection<Move> whiteLegals = board.whitePlayer().getLegalMoves();\n        assertEquals(whiteLegals.size(), 13);\n        final Move wm1 = Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"d6\"));\n        final Move wm2 = Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"f6\"));\n        final Move wm3 = Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"c5\"));\n        final Move wm4 = Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"g5\"));\n        final Move wm5 = Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"c3\"));\n        final Move wm6 = Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"g3\"));\n        final Move wm7 = Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"d2\"));\n        final Move wm8 = Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"f2\"));\n\n        assertTrue(whiteLegals.contains(wm1));\n        assertTrue(whiteLegals.contains(wm2));\n        assertTrue(whiteLegals.contains(wm3));\n        assertTrue(whiteLegals.contains(wm4));\n        assertTrue(whiteLegals.contains(wm5));\n        assertTrue(whiteLegals.contains(wm6));\n        assertTrue(whiteLegals.contains(wm7));\n        assertTrue(whiteLegals.contains(wm8));\n\n        final Board.Builder boardBuilder2 = new Board.Builder();\n        // Black Layout\n        boardBuilder2.setPiece(new King(4, Alliance.BLACK));\n        boardBuilder2.setPiece(new Knight(28, Alliance.BLACK));\n        // White Layout\n        boardBuilder2.setPiece(new Knight(36, Alliance.WHITE));\n        boardBuilder2.setPiece(new King(60, Alliance.WHITE));\n        // Set the current player\n        boardBuilder2.setMoveMaker(Alliance.BLACK);\n        final Board board2 = boardBuilder2.build();\n        final Collection<Move> blackLegals = board.blackPlayer().getLegalMoves();\n\n        final Move bm1 = Move.MoveFactory\n                .createMove(board2, BoardUtils.getCoordinateAtPosition(\"e5\"), BoardUtils.getCoordinateAtPosition(\"d7\"));\n        final Move bm2 = Move.MoveFactory\n                .createMove(board2, BoardUtils.getCoordinateAtPosition(\"e5\"), BoardUtils.getCoordinateAtPosition(\"f7\"));\n        final Move bm3 = Move.MoveFactory\n                .createMove(board2, BoardUtils.getCoordinateAtPosition(\"e5\"), BoardUtils.getCoordinateAtPosition(\"c6\"));\n        final Move bm4 = Move.MoveFactory\n                .createMove(board2, BoardUtils.getCoordinateAtPosition(\"e5\"), BoardUtils.getCoordinateAtPosition(\"g6\"));\n        final Move bm5 = Move.MoveFactory\n                .createMove(board2, BoardUtils.getCoordinateAtPosition(\"e5\"), BoardUtils.getCoordinateAtPosition(\"c4\"));\n        final Move bm6 = Move.MoveFactory\n                .createMove(board2, BoardUtils.getCoordinateAtPosition(\"e5\"), BoardUtils.getCoordinateAtPosition(\"g4\"));\n        final Move bm7 = Move.MoveFactory\n                .createMove(board2, BoardUtils.getCoordinateAtPosition(\"e5\"), BoardUtils.getCoordinateAtPosition(\"d3\"));\n        final Move bm8 = Move.MoveFactory\n                .createMove(board2, BoardUtils.getCoordinateAtPosition(\"e5\"), BoardUtils.getCoordinateAtPosition(\"f3\"));\n\n        assertEquals(blackLegals.size(), 13);\n\n        assertTrue(blackLegals.contains(bm1));\n        assertTrue(blackLegals.contains(bm2));\n        assertTrue(blackLegals.contains(bm3));\n        assertTrue(blackLegals.contains(bm4));\n        assertTrue(blackLegals.contains(bm5));\n        assertTrue(blackLegals.contains(bm6));\n        assertTrue(blackLegals.contains(bm7));\n        assertTrue(blackLegals.contains(bm8));\n    }\n\n    @Test\n    public void testKnightInCorners() {\n        final Board.Builder boardBuilder = new Board.Builder();\n        boardBuilder.setPiece(new King(4, Alliance.BLACK));\n        boardBuilder.setPiece(new Knight(0, Alliance.BLACK));\n        boardBuilder.setPiece(new Knight(56, Alliance.WHITE));\n        boardBuilder.setPiece(new King(60, Alliance.WHITE));\n        boardBuilder.setMoveMaker(Alliance.WHITE);\n        final Board board = boardBuilder.build();\n        final Collection<Move> whiteLegals = board.whitePlayer().getLegalMoves();\n        final Collection<Move> blackLegals = board.blackPlayer().getLegalMoves();\n        assertEquals(whiteLegals.size(), 7);\n        assertEquals(blackLegals.size(), 7);\n        final Move wm1 = Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a1\"), BoardUtils.getCoordinateAtPosition(\"b3\"));\n        final Move wm2 = Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a1\"), BoardUtils.getCoordinateAtPosition(\"c2\"));\n        assertTrue(whiteLegals.contains(wm1));\n        assertTrue(whiteLegals.contains(wm2));\n        final Move bm1 = Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a8\"), BoardUtils.getCoordinateAtPosition(\"b6\"));\n        final Move bm2 = Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a8\"), BoardUtils.getCoordinateAtPosition(\"c7\"));\n        assertTrue(blackLegals.contains(bm1));\n        assertTrue(blackLegals.contains(bm2));\n\n    }\n\n    @Test\n    public void testMiddleBishopOnEmptyBoard() {\n        final Board.Builder builder = new Board.Builder();\n        // Black Layout\n        builder.setPiece(new King(4, Alliance.BLACK));\n        // White Layout\n        builder.setPiece(new Bishop(35, Alliance.WHITE));\n        builder.setPiece(new King(60, Alliance.WHITE));\n        // Set the current player\n        builder.setMoveMaker(Alliance.WHITE);\n        //build the board\n        final Board board = builder.build();\n        final Collection<Move> whiteLegals = board.whitePlayer().getLegalMoves();\n        final Collection<Move> blackLegals = board.blackPlayer().getLegalMoves();\n        assertEquals(whiteLegals.size(), 18);\n        assertEquals(blackLegals.size(), 5);\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"d4\"), BoardUtils.getCoordinateAtPosition(\"a7\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"d4\"), BoardUtils.getCoordinateAtPosition(\"b6\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"d4\"), BoardUtils.getCoordinateAtPosition(\"c5\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"d4\"), BoardUtils.getCoordinateAtPosition(\"e3\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"d4\"), BoardUtils.getCoordinateAtPosition(\"f2\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"d4\"), BoardUtils.getCoordinateAtPosition(\"g1\"))));\n    }\n\n    @Test\n    public void testTopLeftBishopOnEmptyBoard() {\n        Board.Builder builder = new Board.Builder();\n        // Black Layout\n        builder.setPiece(new King(4, Alliance.BLACK));\n        // White Layout\n        builder.setPiece(new Bishop(0, Alliance.WHITE));\n        builder.setPiece(new King(60, Alliance.WHITE));\n        // Set the current player\n        builder.setMoveMaker(Alliance.WHITE);\n        //build the board\n        final Board board = builder.build();\n        final Collection<Move> whiteLegals = board.whitePlayer().getLegalMoves();\n        final Collection<Move> blackLegals = board.blackPlayer().getLegalMoves();\n        assertEquals(board.getTile(0), board.getTile(0));\n        assertNotNull(board.getTile(0));\n        assertEquals(whiteLegals.size(), 12);\n        assertEquals(blackLegals.size(), 5);\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a8\"), BoardUtils.getCoordinateAtPosition(\"b7\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a8\"), BoardUtils.getCoordinateAtPosition(\"c6\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a8\"), BoardUtils.getCoordinateAtPosition(\"d5\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a8\"), BoardUtils.getCoordinateAtPosition(\"e4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a8\"), BoardUtils.getCoordinateAtPosition(\"f3\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a8\"), BoardUtils.getCoordinateAtPosition(\"g2\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a8\"), BoardUtils.getCoordinateAtPosition(\"h1\"))));\n    }\n\n    @Test\n    public void testTopRightBishopOnEmptyBoard() {\n        Board.Builder builder = new Board.Builder();\n        // Black Layout\n        builder.setPiece(new King(4, Alliance.BLACK));\n        // White Layout\n        builder.setPiece(new Bishop(7, Alliance.WHITE));\n        builder.setPiece(new King(60, Alliance.WHITE));\n        // Set the current player\n        builder.setMoveMaker(Alliance.WHITE);\n        //build the board\n        final Board board = builder.build();\n        final Collection<Move> whiteLegals = board.whitePlayer().getLegalMoves();\n        final Collection<Move> blackLegals = board.blackPlayer().getLegalMoves();\n        assertEquals(whiteLegals.size(), 12);\n        assertEquals(blackLegals.size(), 5);\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h8\"), BoardUtils.getCoordinateAtPosition(\"g7\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h8\"), BoardUtils.getCoordinateAtPosition(\"f6\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h8\"), BoardUtils.getCoordinateAtPosition(\"e5\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h8\"), BoardUtils.getCoordinateAtPosition(\"d4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h8\"), BoardUtils.getCoordinateAtPosition(\"c3\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h8\"), BoardUtils.getCoordinateAtPosition(\"b2\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h8\"), BoardUtils.getCoordinateAtPosition(\"a1\"))));\n    }\n\n    @Test\n    public void testBottomLeftBishopOnEmptyBoard() {\n        Board.Builder builder = new Board.Builder();\n        // Black Layout\n        builder.setPiece(new King(4, Alliance.BLACK));\n        // White Layout\n        builder.setPiece(new Bishop(56, Alliance.WHITE));\n        builder.setPiece(new King(60, Alliance.WHITE));\n        // Set the current player\n        builder.setMoveMaker(Alliance.WHITE);\n        //build the board\n        final Board board = builder.build();\n        final Collection<Move> whiteLegals = board.whitePlayer().getLegalMoves();\n        final Collection<Move> blackLegals = board.blackPlayer().getLegalMoves();\n        assertEquals(whiteLegals.size(), 12);\n        assertEquals(blackLegals.size(), 5);\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a1\"), BoardUtils.getCoordinateAtPosition(\"b2\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a1\"), BoardUtils.getCoordinateAtPosition(\"c3\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a1\"), BoardUtils.getCoordinateAtPosition(\"d4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a1\"), BoardUtils.getCoordinateAtPosition(\"e5\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a1\"), BoardUtils.getCoordinateAtPosition(\"f6\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a1\"), BoardUtils.getCoordinateAtPosition(\"g7\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"a1\"), BoardUtils.getCoordinateAtPosition(\"h8\"))));\n    }\n\n    @Test\n    public void testBottomRightBishopOnEmptyBoard() {\n        Board.Builder builder = new Board.Builder();\n        // Black Layout\n        builder.setPiece(new King(4, Alliance.BLACK));\n        // White Layout\n        builder.setPiece(new Bishop(63, Alliance.WHITE));\n        builder.setPiece(new King(60, Alliance.WHITE));\n        // Set the current player\n        builder.setMoveMaker(Alliance.WHITE);\n        //build the board\n        final Board board = builder.build();\n        final Collection<Move> whiteLegals = board.whitePlayer().getLegalMoves();\n        final Collection<Move> blackLegals = board.blackPlayer().getLegalMoves();\n        assertEquals(whiteLegals.size(), 12);\n        assertEquals(blackLegals.size(), 5);\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h1\"), BoardUtils.getCoordinateAtPosition(\"g2\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h1\"), BoardUtils.getCoordinateAtPosition(\"f3\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h1\"), BoardUtils.getCoordinateAtPosition(\"e4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h1\"), BoardUtils.getCoordinateAtPosition(\"d5\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h1\"), BoardUtils.getCoordinateAtPosition(\"c6\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h1\"), BoardUtils.getCoordinateAtPosition(\"b7\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"h1\"), BoardUtils.getCoordinateAtPosition(\"a8\"))));\n    }\n\n    @Test\n    public void testMiddleRookOnEmptyBoard() {\n        final Board.Builder builder = new Board.Builder();\n        // Black Layout\n        builder.setPiece(new King(4, Alliance.BLACK));\n        // White Layout\n        builder.setPiece(new Rook(36, Alliance.WHITE));\n        builder.setPiece(new King(60, Alliance.WHITE));\n        // Set the current player\n        builder.setMoveMaker(Alliance.WHITE);\n        final Board board = builder.build();\n        final Collection<Move> whiteLegals = board.whitePlayer().getLegalMoves();\n        final Collection<Move> blackLegals = board.blackPlayer().getLegalMoves();\n        assertEquals(whiteLegals.size(), 18);\n        assertEquals(blackLegals.size(), 5);\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e8\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e7\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e6\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e5\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e3\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e2\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"a4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"b4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"c4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"d4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"f4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"g4\"))));\n        assertTrue(whiteLegals.contains(Move.MoveFactory\n                .createMove(board, BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"h4\"))));\n    }\n\n    @Test\n    public void testPawnPromotion() {\n        final Board.Builder builder = new Board.Builder();\n        // Black Layout\n        builder.setPiece(new Rook(3, Alliance.BLACK)); /* Rook on position 3 aka d8 */\n        builder.setPiece(new King(22, Alliance.BLACK, false)); /* King on position 22 aka g6 */\n        // White Layout\n        builder.setPiece(new Pawn(15, Alliance.WHITE)); /* Pawn on position 15 aka h7 */\n        builder.setPiece(new King(52, Alliance.WHITE, false)); /* King on position 52 aka e2 */\n        // Set the current player\n        builder.setMoveMaker(Alliance.WHITE);\n        final Board board = builder.build();\n        // Make a Pawn Promotion move\n        int currentCoordinate = BoardUtils.getCoordinateAtPosition(\"h7\");\n        int destinationCoordinate = BoardUtils.getCoordinateAtPosition(\"h8\");\n        final Move m1 = Move.MoveFactory.createMove(board, currentCoordinate , destinationCoordinate);\n        final MoveTransition t1 = board.currentPlayer().makeMove(m1);\n        // Make sure the move went through\n        Assert.assertTrue(t1.getMoveStatus().isDone());\n        // Take the last piece with the rook\n        currentCoordinate = BoardUtils.getCoordinateAtPosition(\"d8\");\n        destinationCoordinate = BoardUtils.getCoordinateAtPosition(\"h8\");\n        final Move m2 = Move.MoveFactory.createMove(t1.getTransitionBoard(), currentCoordinate, destinationCoordinate);\n        final MoveTransition t2 = t1.getTransitionBoard().currentPlayer().makeMove(m2);\n        // Make sure the move went through\n        Assert.assertTrue(t2.getMoveStatus().isDone());\n        // Move the king one square to the left\n        currentCoordinate = BoardUtils.getCoordinateAtPosition(\"e2\");\n        destinationCoordinate = BoardUtils.getCoordinateAtPosition(\"d2\");\n        final Move m3 = Move.MoveFactory.createMove(t2.getTransitionBoard(), currentCoordinate, destinationCoordinate);\n        final MoveTransition t3 = t2.getTransitionBoard().currentPlayer().makeMove(m3);\n        // Make sure the move went through\n        Assert.assertTrue(t3.getMoveStatus().isDone());\n    }\n\n    @Test\n    public void testSimpleWhiteEnPassant() {\n        final Board.Builder builder = new Board.Builder();\n        // Black Layout\n        builder.setPiece(new King(4, Alliance.BLACK));\n        builder.setPiece(new Pawn(11, Alliance.BLACK));\n        // White Layout\n        builder.setPiece(new Pawn(52, Alliance.WHITE));\n        builder.setPiece(new King(60, Alliance.WHITE));\n        // Set the current player\n        builder.setMoveMaker(Alliance.WHITE);\n        final Board board = builder.build();\n        final Move m1 = Move.MoveFactory.createMove(board, BoardUtils.getCoordinateAtPosition(\n                \"e2\"), BoardUtils.getCoordinateAtPosition(\"e4\"));\n        final MoveTransition t1 = board.currentPlayer().makeMove(m1);\n        Assert.assertTrue(t1.getMoveStatus().isDone());\n        final Move m2 = Move.MoveFactory.createMove(t1.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"e8\"), BoardUtils.getCoordinateAtPosition(\"d8\"));\n        final MoveTransition t2 = t1.getTransitionBoard().currentPlayer().makeMove(m2);\n        Assert.assertTrue(t2.getMoveStatus().isDone());\n        final Move m3 = Move.MoveFactory.createMove(t2.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"e4\"), BoardUtils.getCoordinateAtPosition(\"e5\"));\n        final MoveTransition t3 = t2.getTransitionBoard().currentPlayer().makeMove(m3);\n        Assert.assertTrue(t3.getMoveStatus().isDone());\n        final Move m4 = Move.MoveFactory.createMove(t3.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"d7\"), BoardUtils.getCoordinateAtPosition(\"d5\"));\n        final MoveTransition t4 = t3.getTransitionBoard().currentPlayer().makeMove(m4);\n        Assert.assertTrue(t4.getMoveStatus().isDone());\n        final Move m5 = Move.MoveFactory.createMove(t4.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"e5\"), BoardUtils.getCoordinateAtPosition(\"d6\"));\n        final MoveTransition t5 = t4.getTransitionBoard().currentPlayer().makeMove(m5);\n        Assert.assertTrue(t5.getMoveStatus().isDone());\n    }\n\n    @Test\n    public void testSimpleBlackEnPassant() {\n        final Board.Builder builder = new Board.Builder();\n        // Black Layout\n        builder.setPiece(new King(4, Alliance.BLACK));\n        builder.setPiece(new Pawn(11, Alliance.BLACK));\n        // White Layout\n        builder.setPiece(new Pawn(52, Alliance.WHITE));\n        builder.setPiece(new King(60, Alliance.WHITE));\n        // Set the current player\n        builder.setMoveMaker(Alliance.WHITE);\n        final Board board = builder.build();\n        final Move m1 = Move.MoveFactory.createMove(board, BoardUtils.getCoordinateAtPosition(\n                \"e1\"), BoardUtils.getCoordinateAtPosition(\"d1\"));\n        final MoveTransition t1 = board.currentPlayer().makeMove(m1);\n        assertTrue(t1.getMoveStatus().isDone());\n        final Move m2 = Move.MoveFactory.createMove(t1.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"d7\"), BoardUtils.getCoordinateAtPosition(\"d5\"));\n        final MoveTransition t2 = t1.getTransitionBoard().currentPlayer().makeMove(m2);\n        assertTrue(t2.getMoveStatus().isDone());\n        final Move m3 = Move.MoveFactory.createMove(t2.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"d1\"), BoardUtils.getCoordinateAtPosition(\"c1\"));\n        final MoveTransition t3 = t2.getTransitionBoard().currentPlayer().makeMove(m3);\n        assertTrue(t3.getMoveStatus().isDone());\n        final Move m4 = Move.MoveFactory.createMove(t3.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"d5\"), BoardUtils.getCoordinateAtPosition(\"d4\"));\n        final MoveTransition t4 = t3.getTransitionBoard().currentPlayer().makeMove(m4);\n        assertTrue(t4.getMoveStatus().isDone());\n        final Move m5 = Move.MoveFactory.createMove(t4.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"e2\"), BoardUtils.getCoordinateAtPosition(\"e4\"));\n        final MoveTransition t5 = t4.getTransitionBoard().currentPlayer().makeMove(m5);\n        assertTrue(t5.getMoveStatus().isDone());\n        final Move m6 = Move.MoveFactory.createMove(t5.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"d4\"), BoardUtils.getCoordinateAtPosition(\"e3\"));\n        final MoveTransition t6 = t5.getTransitionBoard().currentPlayer().makeMove(m6);\n        Assert.assertTrue(t6.getMoveStatus().isDone());\n    }\n\n    @Test\n    public void testEnPassant2() {\n        final Board board = Board.createStandardBoard();\n        final Move m1 = Move.MoveFactory.createMove(board, BoardUtils.getCoordinateAtPosition(\n                \"e2\"), BoardUtils.getCoordinateAtPosition(\"e3\"));\n        final MoveTransition t1 = board.currentPlayer().makeMove(m1);\n        assertTrue(t1.getMoveStatus().isDone());\n        final Move m2 = Move.MoveFactory.createMove(t1.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"h7\"), BoardUtils.getCoordinateAtPosition(\"h5\"));\n        final MoveTransition t2 = t1.getTransitionBoard().currentPlayer().makeMove(m2);\n        assertTrue(t2.getMoveStatus().isDone());\n        final Move m3 = Move.MoveFactory.createMove(t2.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"e3\"), BoardUtils.getCoordinateAtPosition(\"e4\"));\n        final MoveTransition t3 = t2.getTransitionBoard().currentPlayer().makeMove(m3);\n        assertTrue(t3.getMoveStatus().isDone());\n        final Move m4 = Move.MoveFactory.createMove(t3.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"h5\"), BoardUtils.getCoordinateAtPosition(\"h4\"));\n        final MoveTransition t4 = t3.getTransitionBoard().currentPlayer().makeMove(m4);\n        assertTrue(t4.getMoveStatus().isDone());\n        final Move m5 = Move.MoveFactory.createMove(t4.getTransitionBoard(), BoardUtils.getCoordinateAtPosition(\"g2\"), BoardUtils.getCoordinateAtPosition(\"g4\"));\n        final MoveTransition t5 = t4.getTransitionBoard().currentPlayer().makeMove(m5);\n        assertTrue(t5.getMoveStatus().isDone());\n    }\n\n    @Test\n    public void testKingEquality() {\n        final Board board = Board.createStandardBoard();\n        final Board board2 = Board.createStandardBoard();\n        assertEquals(board.getTile(60), board2.getTile(60));\n        assertFalse(board.getTile(60).equals(null));\n    }\n\n\n\n    /*\n    @Test\n    public void testHashCode() {\n        final Board board = Board.createStandardBoard();\n        final Set<Piece> pieceSet = Sets.newHashSet(board.getAllPieces());\n        final Set<Piece> whitePieceSet = Sets.newHashSet(board.getWhitePieces());\n        final Set<Piece> blackPieceSet = Sets.newHashSet(board.getBlackPieces());\n        assertTrue(pieceSet.size() == 32);\n        assertTrue(whitePieceSet.size() == 16);\n        assertTrue(blackPieceSet.size() == 16);\n    }\n\n     */\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/tests/com/chess/tests/TestPieces.java b/src/tests/com/chess/tests/TestPieces.java
--- a/src/tests/com/chess/tests/TestPieces.java	(revision d4a456589665d8bdbcc90e7f4f7c4ef107a72c25)
+++ b/src/tests/com/chess/tests/TestPieces.java	(date 1669103435410)
@@ -498,7 +498,8 @@
         final Board board = Board.createStandardBoard();
         final Board board2 = Board.createStandardBoard();
         assertEquals(board.getTile(60), board2.getTile(60));
-        assertFalse(board.getTile(60).equals(null));
+        assertFalse(board.getTile(60).equals(null)); // 
+
     }
 
 
Index: src/com/chess/engine/pieces/Pawn.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.chess.engine.pieces;\n\nimport com.chess.engine.Alliance;\nimport com.chess.engine.board.Board;\nimport com.chess.engine.board.BoardUtils;\nimport com.chess.engine.board.Move;\nimport com.chess.engine.board.Move.*;\n\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class Pawn extends Piece {\n\n    /**\n     * The possible move offsets for a pawn\n     * 8: up\n     * 7: up and right\n     * 9: up and left\n     */\n    private final static int[] CANDIDATE_MOVE_COORDINATE = {8, 16, 7, 9};\n\n    /**\n     * Constructor\n     *\n     * @param piecePosition the position of the piece\n     * @param pieceAlliance the alliance of the piece\n     */\n    public Pawn(final int piecePosition, final Alliance pieceAlliance) {\n        super(PieceType.PAWN, piecePosition, pieceAlliance, true);\n    }\n\n    /**\n     * Constructor\n     *\n     * @param piecePosition the position of the piece\n     * @param pieceAlliance the alliance of the piece\n     * @param isFirstMove   if the piece has moved\n     */\n    public Pawn(final int piecePosition, final Alliance pieceAlliance, final boolean isFirstMove) {\n        super(PieceType.PAWN, piecePosition, pieceAlliance, isFirstMove);\n    }\n\n    /**\n     * Print the piece\n     *\n     * @return the piece as a string\n     */\n    @Override\n    public String toString() {\n        return PieceType.PAWN.toString();\n    }\n\n    /**\n     * Calculate the legal moves for the Pawn\n     *\n     * @param board the board\n     * @return a collection of legal moves\n     */\n    @Override\n    public Collection<Move> calculateLegalMoves(final Board board) {\n\n        final List<Move> legalMoves = new ArrayList<>(); /* for each of the possible moves, check if the move is legal */\n\n        for (final int currentCandidateOffset : CANDIDATE_MOVE_COORDINATE) { /* for each of the possible moves*/\n            /* add the offset to the current position to get the destination coordinate */\n            final int candidateDestinationCoordinate = this.piecePosition +\n                    (this.getPieceAlliance().getDirection() * currentCandidateOffset);\n\n            // One move forward\n            if (!BoardUtils.isValidTileCoordinate(candidateDestinationCoordinate)) {\n                continue; /* if the tile is not occupied, continue checking*/\n            }\n\n            /* if you are moving one tile forward and the tile is not occupied*/\n            if (currentCandidateOffset == 8 && !board.getTile(candidateDestinationCoordinate).isTileOccupied()) {\n                if (this.pieceAlliance.isPawnPromotionSquare(candidateDestinationCoordinate)) {\n                    legalMoves.add(new PawnPromotion(new PawnMove(board, this, candidateDestinationCoordinate)));\n                } else {\n                    legalMoves.add(new PawnMove(board, this, candidateDestinationCoordinate));\n                }\n            }\n            // Two moves forward\n            else if (currentCandidateOffset == 16 && this.isFirstMove &&                                 /* if you are moving two tiles forward, and it is the first move AND */\n                    ((BoardUtils.SECOND_ROW[this.piecePosition] && this.getPieceAlliance().isBlack()) || /* if you are on the second row and your alliance is black or */\n                            (BoardUtils.SEVENTH_ROW[this.piecePosition] && this.getPieceAlliance().isWhite()))) { /* if you are on the seventh row and your alliance is white */\n                /* between the current position and the destination position, there must be an empty tile */\n                final int behindCandidateDestinationCoordinate = this.piecePosition + (this.pieceAlliance.getDirection() * 8);\n\n                if (!board.getTile(behindCandidateDestinationCoordinate).isTileOccupied() &&                /* if the tile behind the destination is not occupied and */\n                        !board.getTile(candidateDestinationCoordinate).isTileOccupied()) {                 /* if the destination tile is not occupied */\n                    legalMoves.add(new PawnJump(board, this, candidateDestinationCoordinate)); /* add the move to the list of legal moves */\n                }\n            }\n            // Attack move to the left\n            else if (currentCandidateOffset == 9 &&                                                          /* if you are moving one tile diagonally to the right */\n                    !((BoardUtils.FIRST_COLUMN[this.piecePosition] && this.pieceAlliance.isWhite() ||       /* and you are not on the first column, and you are white */\n                            (BoardUtils.EIGHTH_COLUMN[this.piecePosition] && this.pieceAlliance.isBlack())))) {       /* or you are not on the eighth column, and you are black  (because of promotions)*/\n\n                /* if there exist an en passant pawn, and its position is to the left of the current position */\n                if (board.getEnPassantPawn() != null && board.getEnPassantPawn().getPiecePosition() ==\n                        (this.piecePosition - (this.pieceAlliance.getOppositeDirection()))) {\n                    final Piece pieceOnCandidate = board.getEnPassantPawn();\n                    /* if the candidate piece is not the same alliance as the current piece add the move to the legals */\n                    if (this.pieceAlliance != pieceOnCandidate.getPieceAlliance()) {\n                        legalMoves.add( /* add the move to the list of legal moves */\n                                new PawnEnPassantAttackMove(board, this,\n                                        candidateDestinationCoordinate, pieceOnCandidate));\n                    }\n                }\n                /* if the tile is occupied*/\n                else if (board.getTile(candidateDestinationCoordinate).isTileOccupied()) {\n                    /* get the piece on the tile */\n                    final Piece pieceAtDestination = board.getTile(candidateDestinationCoordinate).getPiece();\n                    /* if the piece is not the same color as the pawn*/\n                    if (this.pieceAlliance != pieceAtDestination.getPieceAlliance()) {\n                        if (this.pieceAlliance.isPawnPromotionSquare(candidateDestinationCoordinate)) {\n                            legalMoves.add(new PawnPromotion(new PawnAttackMove(board, this,\n                                    candidateDestinationCoordinate, pieceAtDestination)));\n                        } else {\n                            legalMoves.add(new PawnAttackMove(board, this,\n                                    candidateDestinationCoordinate, pieceAtDestination));\n                        }\n                    }\n                }\n            }\n            // Attack move to the right\n            else if (currentCandidateOffset == 7 &&                                                          /* if you are moving one tile diagonally to the left */\n                    !((BoardUtils.FIRST_COLUMN[this.piecePosition] && this.pieceAlliance.isBlack() ||       /* and you are not on the first column, and you are black */\n                            (BoardUtils.EIGHTH_COLUMN[this.piecePosition] && this.pieceAlliance.isWhite())))) {       /* or you are not on the eighth column, and you are white  (because of promotions)*/\n\n                /* if there exist an en passant pawn, and its position is to the right of the current position */\n                if (board.getEnPassantPawn() != null && board.getEnPassantPawn().getPiecePosition() ==\n                        (this.piecePosition + (this.pieceAlliance.getOppositeDirection()))) {\n                    final Piece pieceOnCandidate = board.getEnPassantPawn();\n                    /* if the candidate piece is not the same alliance as the current piece add the move to the legals */\n                    if (this.pieceAlliance != pieceOnCandidate.getPieceAlliance()) {\n                        legalMoves.add(\n                                new PawnEnPassantAttackMove(board, this,\n                                        candidateDestinationCoordinate, pieceOnCandidate));\n                    }\n                }\n                /* if the tile is occupied*/\n                else if (board.getTile(candidateDestinationCoordinate).isTileOccupied()) {\n                    /* get the piece on the tile */\n                    final Piece pieceAtDestination = board.getTile(candidateDestinationCoordinate).getPiece();\n                    /* if the piece is not the same color as the pawn*/\n                    if (this.pieceAlliance != pieceAtDestination.getPieceAlliance()) {\n                        if (this.pieceAlliance.isPawnPromotionSquare(candidateDestinationCoordinate)) {\n                            legalMoves.add(new PawnPromotion(new PawnAttackMove(board, this,\n                                    candidateDestinationCoordinate, pieceAtDestination)));\n                        } else {\n                            legalMoves.add(new PawnAttackMove(board, this,\n                                    candidateDestinationCoordinate, pieceAtDestination));\n                        }\n                    }\n                }\n            }\n        }\n\n\n    return Collections.unmodifiableList(legalMoves); /* return an unmodifiable list of legal moves */\n    }\n\n    /**\n     * Return a new piece with the updated position\n     *\n     * @param move the move\n     * @return a new piece with the updated position\n     */\n    @Override\n    public Piece movePiece (Move move){\n        return new Pawn(move.getDestinationCoordinate(), move.getMovedPiece().getPieceAlliance());\n    }\n\n    public Piece getPromotionPiece() {\n        return new Queen(this.piecePosition, this.pieceAlliance, false);\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/chess/engine/pieces/Pawn.java b/src/com/chess/engine/pieces/Pawn.java
--- a/src/com/chess/engine/pieces/Pawn.java	(revision d4a456589665d8bdbcc90e7f4f7c4ef107a72c25)
+++ b/src/com/chess/engine/pieces/Pawn.java	(date 1669106745177)
@@ -58,6 +58,7 @@
      * @param board the board
      * @return a collection of legal moves
      */
+
     @Override
     public Collection<Move> calculateLegalMoves(final Board board) {
 
@@ -126,7 +127,7 @@
                 }
             }
             // Attack move to the right
-            else if (currentCandidateOffset == 7 &&                                                          /* if you are moving one tile diagonally to the left */
+            else if (currentCandidateOffset == 7 &&     /* if you are moving one tile diagonally to the left */
                     !((BoardUtils.FIRST_COLUMN[this.piecePosition] && this.pieceAlliance.isBlack() ||       /* and you are not on the first column, and you are black */
                             (BoardUtils.EIGHTH_COLUMN[this.piecePosition] && this.pieceAlliance.isWhite())))) {       /* or you are not on the eighth column, and you are white  (because of promotions)*/
 
@@ -159,8 +160,8 @@
             }
         }
 
-
-    return Collections.unmodifiableList(legalMoves); /* return an unmodifiable list of legal moves */
+         /* return an unmodifiable list of legal moves */
+    return Collections.unmodifiableList(legalMoves);
     }
 
     /**
Index: ChessOOP.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"module-library\">\n      <library>\n        <CLASSES>\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/jetbrains/annotations/20.1.0/annotations-20.1.0.jar!/\" />\n        </CLASSES>\n        <JAVADOC />\n        <SOURCES />\n      </library>\n    </orderEntry>\n    <orderEntry type=\"module-library\">\n      <library name=\"JUnit4\">\n        <CLASSES>\n          <root url=\"jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/\" />\n        </CLASSES>\n        <JAVADOC />\n        <SOURCES />\n      </library>\n    </orderEntry>\n    <orderEntry type=\"module-library\" scope=\"TEST\">\n      <library name=\"JUnit5.8.1\">\n        <CLASSES>\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.1/junit-jupiter-5.8.1.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.1/junit-jupiter-api-5.8.1.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.1/junit-platform-commons-1.8.1.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.1/junit-jupiter-params-5.8.1.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.1/junit-jupiter-engine-5.8.1.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.1/junit-platform-engine-1.8.1.jar!/\" />\n        </CLASSES>\n        <JAVADOC />\n        <SOURCES />\n      </library>\n    </orderEntry>\n    <orderEntry type=\"module-library\">\n      <library>\n        <CLASSES>\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.1/junit-jupiter-5.8.1.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.1/junit-jupiter-api-5.8.1.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.1/junit-platform-commons-1.8.1.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.1/junit-jupiter-params-5.8.1.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.1/junit-jupiter-engine-5.8.1.jar!/\" />\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.1/junit-platform-engine-1.8.1.jar!/\" />\n        </CLASSES>\n        <JAVADOC />\n        <SOURCES />\n      </library>\n    </orderEntry>\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ChessOOP.iml b/ChessOOP.iml
--- a/ChessOOP.iml	(revision d4a456589665d8bdbcc90e7f4f7c4ef107a72c25)
+++ b/ChessOOP.iml	(date 1669103435413)
@@ -58,5 +58,15 @@
         <SOURCES />
       </library>
     </orderEntry>
+    <orderEntry type="module-library">
+      <library name="JUnit4">
+        <CLASSES>
+          <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
   </component>
 </module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"a031013f-de90-49de-9729-ba8419bbe781\" name=\"Changes\" comment=\"min max recursive functions added\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/com/chess/engine/player/Player.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/com/chess/engine/player/Player.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/tests/com/chess/tests/TestPieces.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/tests/com/chess/tests/TestPieces.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"CodeInsightWorkspaceSettings\">\n    <option name=\"optimizeImportsOnTheFly\" value=\"true\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"JUnit5 Test Class\" />\n        <option value=\"Class\" />\n        <option value=\"Interface\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <favorite-branches>\n      <branch-storage>\n        <map>\n          <entry type=\"REMOTE\">\n            <value>\n              <list>\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"origin/main\" />\n              </list>\n            </value>\n          </entry>\n        </map>\n      </branch-storage>\n    </favorite-branches>\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"AI\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2GNfURlmVRV4tIlgu55bJVBpqHW\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\n    &quot;Repository.Attach.Annotations&quot;: &quot;true&quot;,\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;true&quot;,\n    &quot;Repository.Attach.Sources&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\n    &quot;create.test.in.the.same.root&quot;: &quot;true&quot;,\n    &quot;extract.method.default.visibility&quot;: &quot;private&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/Users/ali/Library/CloudStorage/OneDrive-Personal/Desktop/Other/Coding/School/Object Oriented Programming/ChessOOP&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;SDKs&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\n    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settings.ide.settings.uml&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"CreateClassDialog.RecentsKey\">\n      <recent name=\"com.chess.gui\" />\n      <recent name=\"com.chess.engine.board\" />\n      <recent name=\"com.chess.engine.player\" />\n      <recent name=\"com.chess.engine.pieces\" />\n    </key>\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$\" />\n      <recent name=\"$PROJECT_DIR$/src\" />\n    </key>\n    <key name=\"MoveMembersDialog.RECENTS_KEY\">\n      <recent name=\"com.chess.engine.board.BoardUtils\" />\n    </key>\n    <key name=\"CreateTestDialog.Recents.Supers\">\n      <recent name=\"\" />\n    </key>\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"com.chess\" />\n    </key>\n    <key name=\"CreateTestDialog.RecentsKey\">\n      <recent name=\"com.tests.chess.engine.board\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"JUnit.TestPieces.testPawnPromotion\">\n    <configuration name=\"com.chess.OOPChess\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"corretto-19\" />\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.chess.OOPChess\" />\n      <module name=\"ChessOOP\" />\n      <option name=\"PROGRAM_PARAMETERS\" value=\"-Xms64m -Xmx1024m\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\".*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n        <pattern>\n          <option name=\"PATTERN\" value=\"com.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"ChessTestSuite\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ChessOOP\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"tests.com.chess.tests.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"tests.com.chess.tests\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"tests.com.chess.tests.ChessTestSuite\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"TestBoard\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ChessOOP\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"tests.com.chess.tests.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"tests.com.chess.tests\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"tests.com.chess.tests.TestBoard\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"TestCheckmate\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ChessOOP\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"tests.com.chess.tests.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"tests.com.chess.tests\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"tests.com.chess.tests.TestCheckmate\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"TestPieces.testPawnPromotion\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"ChessOOP\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"tests.com.chess.tests.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"tests.com.chess.tests\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"tests.com.chess.tests.TestPieces\" />\n      <option name=\"METHOD_NAME\" value=\"testPawnPromotion\" />\n      <option name=\"TEST_OBJECT\" value=\"method\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"JUnit.TestPieces.testPawnPromotion\" />\n        <item itemvalue=\"JUnit.TestCheckmate\" />\n        <item itemvalue=\"JUnit.TestBoard\" />\n        <item itemvalue=\"JUnit.ChessTestSuite\" />\n        <item itemvalue=\"JUnit.TestPieces.testPawnPromotion\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"StructuralSearchPlugin\">\n    <searchConfiguration name=\"new LinkedList&lt;&gt;(legalMoves)\" created=\"1666850543501\" uuid=\"db4b32bb-b2a1-36a8-a896-0d91c20dad28\" text=\"new LinkedList&lt;&gt;(legalMoves)\" recursive=\"true\" caseInsensitive=\"false\" type=\"JAVA\" pattern_context=\"default\" scope_type=\"PROJECT\" scope_descriptor=\"\" history=\"1\">\n      <constraint name=\"__context__\" within=\"\" contains=\"\" />\n    </searchConfiguration>\n  </component>\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"a031013f-de90-49de-9729-ba8419bbe781\" name=\"Changes\" comment=\"\" />\n      <created>1666233984289</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1666233984289</updated>\n      <workItem from=\"1666233985515\" duration=\"2585000\" />\n      <workItem from=\"1666331979402\" duration=\"250000\" />\n      <workItem from=\"1666335632906\" duration=\"6075000\" />\n      <workItem from=\"1666346436499\" duration=\"543000\" />\n      <workItem from=\"1666570921488\" duration=\"68000\" />\n      <workItem from=\"1666571001151\" duration=\"263000\" />\n      <workItem from=\"1666571462875\" duration=\"3178000\" />\n      <workItem from=\"1666649396459\" duration=\"71000\" />\n      <workItem from=\"1666649473994\" duration=\"30122000\" />\n      <workItem from=\"1666720096642\" duration=\"8606000\" />\n      <workItem from=\"1666753810138\" duration=\"13805000\" />\n      <workItem from=\"1666835273945\" duration=\"13575000\" />\n      <workItem from=\"1667031392554\" duration=\"2067000\" />\n      <workItem from=\"1667427093975\" duration=\"600000\" />\n      <workItem from=\"1668054679652\" duration=\"5516000\" />\n      <workItem from=\"1668209659403\" duration=\"2261000\" />\n      <workItem from=\"1668825021194\" duration=\"4854000\" />\n      <workItem from=\"1668933010847\" duration=\"4686000\" />\n    </task>\n    <task id=\"LOCAL-00056\" summary=\"Created GUI package and Table class\">\n      <created>1666822013432</created>\n      <option name=\"number\" value=\"00056\" />\n      <option name=\"presentableId\" value=\"LOCAL-00056\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666822013432</updated>\n    </task>\n    <task id=\"LOCAL-00057\" summary=\"cleanup\">\n      <created>1666822043713</created>\n      <option name=\"number\" value=\"00057\" />\n      <option name=\"presentableId\" value=\"LOCAL-00057\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666822043713</updated>\n    </task>\n    <task id=\"LOCAL-00058\" summary=\"Added MenuBar to GUI\">\n      <created>1666822421947</created>\n      <option name=\"number\" value=\"00058\" />\n      <option name=\"presentableId\" value=\"LOCAL-00058\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666822421947</updated>\n    </task>\n    <task id=\"LOCAL-00059\" summary=\"Added board and tile classes to GUI\">\n      <created>1666823695179</created>\n      <option name=\"number\" value=\"00059\" />\n      <option name=\"presentableId\" value=\"LOCAL-00059\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666823695179</updated>\n    </task>\n    <task id=\"LOCAL-00060\" summary=\"Initialized all rows and columns\">\n      <created>1666823888720</created>\n      <option name=\"number\" value=\"00060\" />\n      <option name=\"presentableId\" value=\"LOCAL-00060\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666823888720</updated>\n    </task>\n    <task id=\"LOCAL-00061\" summary=\"Gave the rows and columns color in GUI\">\n      <created>1666824699626</created>\n      <option name=\"number\" value=\"00061\" />\n      <option name=\"presentableId\" value=\"LOCAL-00061\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666824699626</updated>\n    </task>\n    <task id=\"LOCAL-00062\" summary=\"added exit to menubar\">\n      <created>1666824927022</created>\n      <option name=\"number\" value=\"00062\" />\n      <option name=\"presentableId\" value=\"LOCAL-00062\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666824927022</updated>\n    </task>\n    <task id=\"LOCAL-00063\" summary=\"Pieces on the checkerboard\">\n      <created>1666827441219</created>\n      <option name=\"number\" value=\"00063\" />\n      <option name=\"presentableId\" value=\"LOCAL-00063\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666827441219</updated>\n    </task>\n    <task id=\"LOCAL-00064\" summary=\"improvements\">\n      <created>1666830790955</created>\n      <option name=\"number\" value=\"00064\" />\n      <option name=\"presentableId\" value=\"LOCAL-00064\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666830790955</updated>\n    </task>\n    <task id=\"LOCAL-00065\" summary=\"improvements\">\n      <created>1666830843951</created>\n      <option name=\"number\" value=\"00065\" />\n      <option name=\"presentableId\" value=\"LOCAL-00065\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666830843951</updated>\n    </task>\n    <task id=\"LOCAL-00066\" summary=\"Added a mouse listener to the GUI tile class\">\n      <created>1666831831554</created>\n      <option name=\"number\" value=\"00066\" />\n      <option name=\"presentableId\" value=\"LOCAL-00066\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666831831554</updated>\n    </task>\n    <task id=\"LOCAL-00067\" summary=\"Pieces ~should~ be able to move on the gui\">\n      <created>1666832666879</created>\n      <option name=\"number\" value=\"00067\" />\n      <option name=\"presentableId\" value=\"LOCAL-00067\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666832666879</updated>\n    </task>\n    <task id=\"LOCAL-00068\" summary=\"legal moves ~should~ be highlighting\">\n      <created>1666834900043</created>\n      <option name=\"number\" value=\"00068\" />\n      <option name=\"presentableId\" value=\"LOCAL-00068\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666834900043</updated>\n    </task>\n    <task id=\"LOCAL-00069\" summary=\"comments\">\n      <created>1666835236639</created>\n      <option name=\"number\" value=\"00069\" />\n      <option name=\"presentableId\" value=\"LOCAL-00069\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666835236639</updated>\n    </task>\n    <task id=\"LOCAL-00070\" summary=\"pieces move and are actually highlighted now\">\n      <created>1666836304511</created>\n      <option name=\"number\" value=\"00070\" />\n      <option name=\"presentableId\" value=\"LOCAL-00070\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666836304511</updated>\n    </task>\n    <task id=\"LOCAL-00071\" summary=\"fixing bugs\">\n      <created>1666837618100</created>\n      <option name=\"number\" value=\"00071\" />\n      <option name=\"presentableId\" value=\"LOCAL-00071\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666837618100</updated>\n    </task>\n    <task id=\"LOCAL-00072\" summary=\"fixing bugs\">\n      <created>1666842826653</created>\n      <option name=\"number\" value=\"00072\" />\n      <option name=\"presentableId\" value=\"LOCAL-00072\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666842826653</updated>\n    </task>\n    <task id=\"LOCAL-00073\" summary=\"fixing bugs\">\n      <created>1666844396727</created>\n      <option name=\"number\" value=\"00073\" />\n      <option name=\"presentableId\" value=\"LOCAL-00073\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666844396727</updated>\n    </task>\n    <task id=\"LOCAL-00074\" summary=\"fixing bugs\">\n      <created>1666847944244</created>\n      <option name=\"number\" value=\"00074\" />\n      <option name=\"presentableId\" value=\"LOCAL-00074\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666847944244</updated>\n    </task>\n    <task id=\"LOCAL-00075\" summary=\"Created new Dead Pieces Panel that sorts by piece value\">\n      <created>1666847982663</created>\n      <option name=\"number\" value=\"00075\" />\n      <option name=\"presentableId\" value=\"LOCAL-00075\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666847982663</updated>\n    </task>\n    <task id=\"LOCAL-00076\" summary=\"Created new Dead Pieces Panel that sorts by piece value\">\n      <created>1666848639475</created>\n      <option name=\"number\" value=\"00076\" />\n      <option name=\"presentableId\" value=\"LOCAL-00076\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666848639475</updated>\n    </task>\n    <task id=\"LOCAL-00077\" summary=\"Bugs\">\n      <created>1666848648687</created>\n      <option name=\"number\" value=\"00077\" />\n      <option name=\"presentableId\" value=\"LOCAL-00077\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666848648687</updated>\n    </task>\n    <task id=\"LOCAL-00078\" summary=\"Bug testing\">\n      <created>1666849680913</created>\n      <option name=\"number\" value=\"00078\" />\n      <option name=\"presentableId\" value=\"LOCAL-00078\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666849680913</updated>\n    </task>\n    <task id=\"LOCAL-00079\" summary=\"Bug testing\">\n      <created>1666849734930</created>\n      <option name=\"number\" value=\"00079\" />\n      <option name=\"presentableId\" value=\"LOCAL-00079\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666849734930</updated>\n    </task>\n    <task id=\"LOCAL-00080\" summary=\"cleanup\">\n      <created>1666850304080</created>\n      <option name=\"number\" value=\"00080\" />\n      <option name=\"presentableId\" value=\"LOCAL-00080\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1666850304080</updated>\n    </task>\n    <task id=\"LOCAL-00081\" summary=\"merge nathan diagram\">\n      <created>1667030571505</created>\n      <option name=\"number\" value=\"00081\" />\n      <option name=\"presentableId\" value=\"LOCAL-00081\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1667030571505</updated>\n    </task>\n    <task id=\"LOCAL-00082\" summary=\"Did the diagram better than nathan\">\n      <created>1667031689322</created>\n      <option name=\"number\" value=\"00082\" />\n      <option name=\"presentableId\" value=\"LOCAL-00082\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1667031689322</updated>\n    </task>\n    <task id=\"LOCAL-00083\" summary=\"Did the diagram better than nathan\">\n      <created>1667031800317</created>\n      <option name=\"number\" value=\"00083\" />\n      <option name=\"presentableId\" value=\"LOCAL-00083\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1667031800317</updated>\n    </task>\n    <task id=\"LOCAL-00084\" summary=\"Did the diagram better than nathan\">\n      <created>1667031965570</created>\n      <option name=\"number\" value=\"00084\" />\n      <option name=\"presentableId\" value=\"LOCAL-00084\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1667031965570</updated>\n    </task>\n    <task id=\"LOCAL-00085\" summary=\"Did the diagram better than nathan\">\n      <created>1667032217867</created>\n      <option name=\"number\" value=\"00085\" />\n      <option name=\"presentableId\" value=\"LOCAL-00085\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1667032217867</updated>\n    </task>\n    <task id=\"LOCAL-00086\" summary=\"im back\">\n      <created>1668054987452</created>\n      <option name=\"number\" value=\"00086\" />\n      <option name=\"presentableId\" value=\"LOCAL-00086\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668054987452</updated>\n    </task>\n    <task id=\"LOCAL-00087\" summary=\"Created new game history panel\">\n      <created>1668056617469</created>\n      <option name=\"number\" value=\"00087\" />\n      <option name=\"presentableId\" value=\"LOCAL-00087\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668056617469</updated>\n    </task>\n    <task id=\"LOCAL-00088\" summary=\"Added movelog and fixed bugs\">\n      <created>1668058785427</created>\n      <option name=\"number\" value=\"00088\" />\n      <option name=\"presentableId\" value=\"LOCAL-00088\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668058785428</updated>\n    </task>\n    <task id=\"LOCAL-00089\" summary=\"OMG a working game of chess (no en passant)\">\n      <created>1668210631367</created>\n      <option name=\"number\" value=\"00089\" />\n      <option name=\"presentableId\" value=\"LOCAL-00089\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668210631367</updated>\n    </task>\n    <task id=\"LOCAL-00090\" summary=\"tying up loose ends + en passant pt1\">\n      <created>1668211589759</created>\n      <option name=\"number\" value=\"00090\" />\n      <option name=\"presentableId\" value=\"LOCAL-00090\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668211589759</updated>\n    </task>\n    <task id=\"LOCAL-00091\" summary=\"x\">\n      <created>1668817943613</created>\n      <option name=\"number\" value=\"00091\" />\n      <option name=\"presentableId\" value=\"LOCAL-00091\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668817943614</updated>\n    </task>\n    <task id=\"LOCAL-00092\" summary=\"En Passant is highlighted but not executed\">\n      <created>1668819730323</created>\n      <option name=\"number\" value=\"00092\" />\n      <option name=\"presentableId\" value=\"LOCAL-00092\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668819730323</updated>\n    </task>\n    <task id=\"LOCAL-00093\" summary=\"En Passant is highlighted but not executed\">\n      <created>1668820115918</created>\n      <option name=\"number\" value=\"00093\" />\n      <option name=\"presentableId\" value=\"LOCAL-00093\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668820115918</updated>\n    </task>\n    <task id=\"LOCAL-00094\" summary=\"idk what im doing\">\n      <created>1668827281569</created>\n      <option name=\"number\" value=\"00094\" />\n      <option name=\"presentableId\" value=\"LOCAL-00094\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668827281569</updated>\n    </task>\n    <task id=\"LOCAL-00095\" summary=\"cleanup i think\">\n      <created>1668828391054</created>\n      <option name=\"number\" value=\"00095\" />\n      <option name=\"presentableId\" value=\"LOCAL-00095\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668828391054</updated>\n    </task>\n    <task id=\"LOCAL-00096\" summary=\"cleanup\">\n      <created>1668828954078</created>\n      <option name=\"number\" value=\"00096\" />\n      <option name=\"presentableId\" value=\"LOCAL-00096\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668828954078</updated>\n    </task>\n    <task id=\"LOCAL-00097\" summary=\"En Passant is highlighted but not executed\">\n      <created>1668829272280</created>\n      <option name=\"number\" value=\"00097\" />\n      <option name=\"presentableId\" value=\"LOCAL-00097\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668829272280</updated>\n    </task>\n    <task id=\"LOCAL-00098\" summary=\"Pawn promotion doesn't work but it should\">\n      <created>1668941908446</created>\n      <option name=\"number\" value=\"00098\" />\n      <option name=\"presentableId\" value=\"LOCAL-00098\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668941908446</updated>\n    </task>\n    <task id=\"LOCAL-00099\" summary=\"The Beginnings of unit testers\">\n      <created>1668944716649</created>\n      <option name=\"number\" value=\"00099\" />\n      <option name=\"presentableId\" value=\"LOCAL-00099\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668944716649</updated>\n    </task>\n    <task id=\"LOCAL-00100\" summary=\"Testers brought over from BlackWidow and fitted to current project - all tests failed :/\">\n      <created>1669064664549</created>\n      <option name=\"number\" value=\"00100\" />\n      <option name=\"presentableId\" value=\"LOCAL-00100\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669064664549</updated>\n    </task>\n    <task id=\"LOCAL-00101\" summary=\"...\">\n      <created>1669069845101</created>\n      <option name=\"number\" value=\"00101\" />\n      <option name=\"presentableId\" value=\"LOCAL-00101\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669069845101</updated>\n    </task>\n    <task id=\"LOCAL-00102\" summary=\"...\">\n      <created>1669069849355</created>\n      <option name=\"number\" value=\"00102\" />\n      <option name=\"presentableId\" value=\"LOCAL-00102\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669069849355</updated>\n    </task>\n    <task id=\"LOCAL-00103\" summary=\"Scaffolding for MiniMax and evaluations\">\n      <created>1669070272517</created>\n      <option name=\"number\" value=\"00103\" />\n      <option name=\"presentableId\" value=\"LOCAL-00103\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669070272517</updated>\n    </task>\n    <task id=\"LOCAL-00104\" summary=\"min max recursive functions added\">\n      <created>1669098247061</created>\n      <option name=\"number\" value=\"00104\" />\n      <option name=\"presentableId\" value=\"LOCAL-00104\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669098247061</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"105\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"BEK_SORT_TYPE\" value=\"1\" />\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"En_Passant\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"RECENT_FILTERS\">\n      <map>\n        <entry key=\"Branch\">\n          <value>\n            <list>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"origin/main\" />\n                </option>\n              </RecentGroup>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"HEAD\" />\n                </option>\n              </RecentGroup>\n            </list>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"legal moves ~should~ be highlighting\" />\n    <MESSAGE value=\"comments\" />\n    <MESSAGE value=\"pieces move and are actually highlighted now\" />\n    <MESSAGE value=\"fixing bugs\" />\n    <MESSAGE value=\"Created new Dead Pieces Panel that sorts by piece value\" />\n    <MESSAGE value=\"Bugs\" />\n    <MESSAGE value=\"Bug testing\" />\n    <MESSAGE value=\"merge nathan diagram\" />\n    <MESSAGE value=\"Did the diagram better than nathan\" />\n    <MESSAGE value=\"im back\" />\n    <MESSAGE value=\"Created new game history panel\" />\n    <MESSAGE value=\"Added movelog and fixed bugs\" />\n    <MESSAGE value=\"OMG a working game of chess (no en passant)\" />\n    <MESSAGE value=\"tying up loose ends + en passant pt1\" />\n    <MESSAGE value=\"x\" />\n    <MESSAGE value=\"idk what im doing\" />\n    <MESSAGE value=\"cleanup i think\" />\n    <MESSAGE value=\"cleanup\" />\n    <MESSAGE value=\"En Passant is highlighted but not executed\" />\n    <MESSAGE value=\"Pawn promotion doesn't work but it should\" />\n    <MESSAGE value=\"The Beginnings of unit testers\" />\n    <MESSAGE value=\"Testers brought over from BlackWidow and fitted to current project - all tests failed :/\" />\n    <MESSAGE value=\"...\" />\n    <MESSAGE value=\"Scaffolding for MiniMax and evaluations\" />\n    <MESSAGE value=\"min max recursive functions added\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"min max recursive functions added\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint type=\"java-exception\">\n          <properties class=\"java.lang.UnsupportedOperationException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"16\" />\n        </breakpoint>\n        <breakpoint type=\"java-exception\">\n          <properties class=\"java.lang.OutOfMemoryError\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"17\" />\n        </breakpoint>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"64\" />\n        </breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/com/chess/gui/Table.java</url>\n          <line>466</line>\n          <option name=\"timeStamp\" value=\"92\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/com/chess/engine/pieces/Pawn.java</url>\n          <line>117</line>\n          <option name=\"timeStamp\" value=\"100\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/tests/com/chess/tests/TestPieces.java</url>\n          <line>399</line>\n          <option name=\"timeStamp\" value=\"124\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/com/chess/engine/player/Player.java</url>\n          <line>140</line>\n          <option name=\"timeStamp\" value=\"125\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/tests/com/chess/tests/TestBoard.java</url>\n          <line>29</line>\n          <option name=\"timeStamp\" value=\"129\" />\n        </line-breakpoint>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/src/com/chess/engine/board/Board.java</url>\n          <line>40</line>\n          <option name=\"timeStamp\" value=\"130\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n    <pin-to-top-manager>\n      <pinned-members>\n        <PinnedItemInfo parentTag=\"com.chess.engine.board.Board\" memberName=\"enPassantPawn\" />\n      </pinned-members>\n    </pin-to-top-manager>\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d4a456589665d8bdbcc90e7f4f7c4ef107a72c25)
+++ b/.idea/workspace.xml	(date 1669106745077)
@@ -4,9 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="a031013f-de90-49de-9729-ba8419bbe781" name="Changes" comment="min max recursive functions added">
+    <list default="true" id="a031013f-de90-49de-9729-ba8419bbe781" name="Changes" comment="Testers brought over from BlackWidow and fitted to current project - all tests failed :/">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/com/chess/engine/player/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/chess/engine/player/Player.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ChessOOP.iml" beforeDir="false" afterPath="$PROJECT_DIR$/ChessOOP.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/com/chess/engine/pieces/Pawn.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/com/chess/engine/pieces/Pawn.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/tests/com/chess/tests/TestPieces.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/tests/com/chess/tests/TestPieces.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -21,9 +22,8 @@
     <option name="RECENT_TEMPLATES">
       <list>
         <option value="Enum" />
-        <option value="JUnit5 Test Class" />
         <option value="Class" />
-        <option value="Interface" />
+        <option value="JUnit5 Test Class" />
       </list>
     </option>
   </component>
@@ -43,7 +43,7 @@
     </favorite-branches>
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="AI" />
+        <entry key="$PROJECT_DIR$" value="Promotion" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -116,7 +116,7 @@
       <recent name="com.tests.chess.engine.board" />
     </key>
   </component>
-  <component name="RunManager" selected="JUnit.TestPieces.testPawnPromotion">
+  <component name="RunManager">
     <configuration name="com.chess.OOPChess" type="Application" factoryName="Application" nameIsGenerated="true">
       <option name="ALTERNATIVE_JRE_PATH" value="corretto-19" />
       <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
@@ -201,10 +201,9 @@
     <recent_temporary>
       <list>
         <item itemvalue="JUnit.TestPieces.testPawnPromotion" />
+        <item itemvalue="JUnit.ChessTestSuite" />
+        <item itemvalue="JUnit.TestBoard" />
         <item itemvalue="JUnit.TestCheckmate" />
-        <item itemvalue="JUnit.TestBoard" />
-        <item itemvalue="JUnit.ChessTestSuite" />
-        <item itemvalue="JUnit.TestPieces.testPawnPromotion" />
       </list>
     </recent_temporary>
   </component>
@@ -239,6 +238,34 @@
       <workItem from="1668209659403" duration="2261000" />
       <workItem from="1668825021194" duration="4854000" />
       <workItem from="1668933010847" duration="4686000" />
+    </task>
+    <task id="LOCAL-00052" summary="Code now runs!">
+      <created>1666737526325</created>
+      <option name="number" value="00052" />
+      <option name="presentableId" value="LOCAL-00052" />
+      <option name="project" value="LOCAL" />
+      <updated>1666737526325</updated>
+    </task>
+    <task id="LOCAL-00053" summary="Cleanup">
+      <created>1666754255141</created>
+      <option name="number" value="00053" />
+      <option name="presentableId" value="LOCAL-00053" />
+      <option name="project" value="LOCAL" />
+      <updated>1666754255141</updated>
+    </task>
+    <task id="LOCAL-00054" summary="Cleanup">
+      <created>1666821966349</created>
+      <option name="number" value="00054" />
+      <option name="presentableId" value="LOCAL-00054" />
+      <option name="project" value="LOCAL" />
+      <updated>1666821966349</updated>
+    </task>
+    <task id="LOCAL-00055" summary="Moved main class to main package">
+      <created>1666821990204</created>
+      <option name="number" value="00055" />
+      <option name="presentableId" value="LOCAL-00055" />
+      <option name="project" value="LOCAL" />
+      <updated>1666821990204</updated>
     </task>
     <task id="LOCAL-00056" summary="Created GUI package and Table class">
       <created>1666822013432</created>
@@ -555,35 +582,7 @@
       <option name="project" value="LOCAL" />
       <updated>1669064664549</updated>
     </task>
-    <task id="LOCAL-00101" summary="...">
-      <created>1669069845101</created>
-      <option name="number" value="00101" />
-      <option name="presentableId" value="LOCAL-00101" />
-      <option name="project" value="LOCAL" />
-      <updated>1669069845101</updated>
-    </task>
-    <task id="LOCAL-00102" summary="...">
-      <created>1669069849355</created>
-      <option name="number" value="00102" />
-      <option name="presentableId" value="LOCAL-00102" />
-      <option name="project" value="LOCAL" />
-      <updated>1669069849355</updated>
-    </task>
-    <task id="LOCAL-00103" summary="Scaffolding for MiniMax and evaluations">
-      <created>1669070272517</created>
-      <option name="number" value="00103" />
-      <option name="presentableId" value="LOCAL-00103" />
-      <option name="project" value="LOCAL" />
-      <updated>1669070272517</updated>
-    </task>
-    <task id="LOCAL-00104" summary="min max recursive functions added">
-      <created>1669098247061</created>
-      <option name="number" value="00104" />
-      <option name="presentableId" value="LOCAL-00104" />
-      <option name="project" value="LOCAL" />
-      <updated>1669098247061</updated>
-    </task>
-    <option name="localTasksCounter" value="105" />
+    <option name="localTasksCounter" value="101" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -635,6 +634,9 @@
   </component>
   <component name="VcsManagerConfiguration">
     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
+    <MESSAGE value="improvements" />
+    <MESSAGE value="Added a mouse listener to the GUI tile class" />
+    <MESSAGE value="Pieces ~should~ be able to move on the gui" />
     <MESSAGE value="legal moves ~should~ be highlighting" />
     <MESSAGE value="comments" />
     <MESSAGE value="pieces move and are actually highlighted now" />
@@ -657,10 +659,7 @@
     <MESSAGE value="Pawn promotion doesn't work but it should" />
     <MESSAGE value="The Beginnings of unit testers" />
     <MESSAGE value="Testers brought over from BlackWidow and fitted to current project - all tests failed :/" />
-    <MESSAGE value="..." />
-    <MESSAGE value="Scaffolding for MiniMax and evaluations" />
-    <MESSAGE value="min max recursive functions added" />
-    <option name="LAST_COMMIT_MESSAGE" value="min max recursive functions added" />
+    <option name="LAST_COMMIT_MESSAGE" value="Testers brought over from BlackWidow and fitted to current project - all tests failed :/" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
@@ -681,31 +680,6 @@
           <url>file://$PROJECT_DIR$/src/com/chess/gui/Table.java</url>
           <line>466</line>
           <option name="timeStamp" value="92" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/com/chess/engine/pieces/Pawn.java</url>
-          <line>117</line>
-          <option name="timeStamp" value="100" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/tests/com/chess/tests/TestPieces.java</url>
-          <line>399</line>
-          <option name="timeStamp" value="124" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/com/chess/engine/player/Player.java</url>
-          <line>140</line>
-          <option name="timeStamp" value="125" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/tests/com/chess/tests/TestBoard.java</url>
-          <line>29</line>
-          <option name="timeStamp" value="129" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/com/chess/engine/board/Board.java</url>
-          <line>40</line>
-          <option name="timeStamp" value="130" />
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
